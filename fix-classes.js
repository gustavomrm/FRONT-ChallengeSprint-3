const fs = require('fs');
const path = require('path');

// Mapeamento de classes antigas para novas
const classMappings = {
  'primary-600': 'blue-600',
  'primary-700': 'blue-700',
  'primary-800': 'blue-800',
  'primary-900': 'blue-900',
  'primary-50': 'blue-50',
  'primary-100': 'blue-100',
  'primary-200': 'blue-200',
  'primary-300': 'blue-300',
  'primary-400': 'blue-400',
  'primary-500': 'blue-500',
  'secondary-600': 'cyan-600',
  'secondary-700': 'cyan-700',
  'secondary-800': 'cyan-800',
  'secondary-900': 'cyan-900',
  'secondary-50': 'cyan-50',
  'secondary-100': 'cyan-100',
  'secondary-200': 'cyan-200',
  'secondary-300': 'cyan-300',
  'secondary-400': 'cyan-400',
  'secondary-500': 'cyan-500',
  'accent-600': 'green-600',
  'accent-700': 'green-700',
  'accent-800': 'green-800',
  'accent-900': 'green-900',
  'accent-50': 'green-50',
  'accent-100': 'green-100',
  'accent-200': 'green-200',
  'accent-300': 'green-300',
  'accent-400': 'green-400',
  'accent-500': 'green-500',
  'neutral-50': 'gray-50',
  'neutral-100': 'gray-100',
  'neutral-200': 'gray-200',
  'neutral-300': 'gray-300',
  'neutral-400': 'gray-400',
  'neutral-500': 'gray-500',
  'neutral-600': 'gray-600',
  'neutral-700': 'gray-700',
  'neutral-800': 'gray-800',
  'neutral-900': 'gray-900',
  'shadow-soft': 'shadow-md',
  'shadow-medium': 'shadow-lg',
  'shadow-strong': 'shadow-xl',
  'shadow-glow': 'shadow-2xl',
  'shadow-glow-green': 'shadow-2xl',
  'text-primary-600': 'text-blue-600',
  'text-primary-700': 'text-blue-700',
  'text-primary-800': 'text-blue-800',
  'text-primary-900': 'text-blue-900',
  'text-secondary-600': 'text-cyan-600',
  'text-secondary-700': 'text-cyan-700',
  'text-secondary-800': 'text-cyan-800',
  'text-secondary-900': 'text-cyan-900',
  'text-accent-600': 'text-green-600',
  'text-accent-700': 'text-green-700',
  'text-accent-800': 'text-green-800',
  'text-accent-900': 'text-green-900',
  'text-neutral-600': 'text-gray-600',
  'text-neutral-700': 'text-gray-700',
  'text-neutral-800': 'text-gray-800',
  'text-neutral-900': 'text-gray-900',
  'bg-primary-600': 'bg-blue-600',
  'bg-primary-700': 'bg-blue-700',
  'bg-primary-800': 'bg-blue-800',
  'bg-primary-900': 'bg-blue-900',
  'bg-primary-50': 'bg-blue-50',
  'bg-primary-100': 'bg-blue-100',
  'bg-primary-200': 'bg-blue-200',
  'bg-primary-300': 'bg-blue-300',
  'bg-primary-400': 'bg-blue-400',
  'bg-primary-500': 'bg-blue-500',
  'bg-secondary-600': 'bg-cyan-600',
  'bg-secondary-700': 'bg-cyan-700',
  'bg-secondary-800': 'bg-cyan-800',
  'bg-secondary-900': 'bg-cyan-900',
  'bg-secondary-50': 'bg-cyan-50',
  'bg-secondary-100': 'bg-cyan-100',
  'bg-secondary-200': 'bg-cyan-200',
  'bg-secondary-300': 'bg-cyan-300',
  'bg-secondary-400': 'bg-cyan-400',
  'bg-secondary-500': 'bg-cyan-500',
  'bg-accent-600': 'bg-green-600',
  'bg-accent-700': 'bg-green-700',
  'bg-accent-800': 'bg-green-800',
  'bg-accent-900': 'bg-green-900',
  'bg-accent-50': 'bg-green-50',
  'bg-accent-100': 'bg-green-100',
  'bg-accent-200': 'bg-green-200',
  'bg-accent-300': 'bg-green-300',
  'bg-accent-400': 'bg-green-400',
  'bg-accent-500': 'bg-green-500',
  'bg-neutral-50': 'bg-gray-50',
  'bg-neutral-100': 'bg-gray-100',
  'bg-neutral-200': 'bg-gray-200',
  'bg-neutral-300': 'bg-gray-300',
  'bg-neutral-400': 'bg-gray-400',
  'bg-neutral-500': 'bg-gray-500',
  'bg-neutral-600': 'bg-gray-600',
  'bg-neutral-700': 'bg-gray-700',
  'bg-neutral-800': 'bg-gray-800',
  'bg-neutral-900': 'bg-gray-900',
  'border-primary-600': 'border-blue-600',
  'border-primary-700': 'border-blue-700',
  'border-primary-800': 'border-blue-800',
  'border-primary-900': 'border-blue-900',
  'border-primary-50': 'border-blue-50',
  'border-primary-100': 'border-blue-100',
  'border-primary-200': 'border-blue-200',
  'border-primary-300': 'border-blue-300',
  'border-primary-400': 'border-blue-400',
  'border-primary-500': 'border-blue-500',
  'border-secondary-600': 'border-cyan-600',
  'border-secondary-700': 'border-cyan-700',
  'border-secondary-800': 'border-cyan-800',
  'border-secondary-900': 'border-cyan-900',
  'border-secondary-50': 'border-cyan-50',
  'border-secondary-100': 'border-cyan-100',
  'border-secondary-200': 'border-cyan-200',
  'border-secondary-300': 'border-cyan-300',
  'border-secondary-400': 'border-cyan-400',
  'border-secondary-500': 'border-cyan-500',
  'border-accent-600': 'border-green-600',
  'border-accent-700': 'border-green-700',
  'border-accent-800': 'border-green-800',
  'border-accent-900': 'border-green-900',
  'border-accent-50': 'border-green-50',
  'border-accent-100': 'border-green-100',
  'border-accent-200': 'border-green-200',
  'border-accent-300': 'border-green-300',
  'border-accent-400': 'border-green-400',
  'border-accent-500': 'border-green-500',
  'border-neutral-50': 'border-gray-50',
  'border-neutral-100': 'border-gray-100',
  'border-neutral-200': 'border-gray-200',
  'border-neutral-300': 'border-gray-300',
  'border-neutral-400': 'border-gray-400',
  'border-neutral-500': 'border-gray-500',
  'border-neutral-600': 'border-gray-600',
  'border-neutral-700': 'border-gray-700',
  'border-neutral-800': 'border-gray-800',
  'border-neutral-900': 'border-gray-900',
  'hover:text-primary-600': 'hover:text-blue-600',
  'hover:text-primary-700': 'hover:text-blue-700',
  'hover:text-primary-800': 'hover:text-blue-800',
  'hover:text-primary-900': 'hover:text-blue-900',
  'hover:bg-primary-600': 'hover:bg-blue-600',
  'hover:bg-primary-700': 'hover:bg-blue-700',
  'hover:bg-primary-800': 'hover:bg-blue-800',
  'hover:bg-primary-900': 'hover:bg-blue-900',
  'hover:border-primary-600': 'hover:border-blue-600',
  'hover:border-primary-700': 'hover:border-blue-700',
  'hover:border-primary-800': 'hover:border-blue-800',
  'hover:border-primary-900': 'hover:border-blue-900',
  'from-primary-600': 'from-blue-600',
  'from-primary-700': 'from-blue-700',
  'from-primary-800': 'from-blue-800',
  'from-primary-900': 'from-blue-900',
  'from-primary-50': 'from-blue-50',
  'from-primary-100': 'from-blue-100',
  'from-primary-200': 'from-blue-200',
  'from-primary-300': 'from-blue-300',
  'from-primary-400': 'from-blue-400',
  'from-primary-500': 'from-blue-500',
  'from-secondary-600': 'from-cyan-600',
  'from-secondary-700': 'from-cyan-700',
  'from-secondary-800': 'from-cyan-800',
  'from-secondary-900': 'from-cyan-900',
  'from-secondary-50': 'from-cyan-50',
  'from-secondary-100': 'from-cyan-100',
  'from-secondary-200': 'from-cyan-200',
  'from-secondary-300': 'from-cyan-300',
  'from-secondary-400': 'from-cyan-400',
  'from-secondary-500': 'from-cyan-500',
  'from-accent-600': 'from-green-600',
  'from-accent-700': 'from-green-700',
  'from-accent-800': 'from-green-800',
  'from-accent-900': 'from-green-900',
  'from-accent-50': 'from-green-50',
  'from-accent-100': 'from-green-100',
  'from-accent-200': 'from-green-200',
  'from-accent-300': 'from-green-300',
  'from-accent-400': 'from-green-400',
  'from-accent-500': 'from-green-500',
  'from-neutral-50': 'from-gray-50',
  'from-neutral-100': 'from-gray-100',
  'from-neutral-200': 'from-gray-200',
  'from-neutral-300': 'from-gray-300',
  'from-neutral-400': 'from-gray-400',
  'from-neutral-500': 'from-gray-500',
  'from-neutral-600': 'from-gray-600',
  'from-neutral-700': 'from-gray-700',
  'from-neutral-800': 'from-gray-800',
  'from-neutral-900': 'from-gray-900',
  'to-primary-600': 'to-blue-600',
  'to-primary-700': 'to-blue-700',
  'to-primary-800': 'to-blue-800',
  'to-primary-900': 'to-blue-900',
  'to-primary-50': 'to-blue-50',
  'to-primary-100': 'to-blue-100',
  'to-primary-200': 'to-blue-200',
  'to-primary-300': 'to-blue-300',
  'to-primary-400': 'to-blue-400',
  'to-primary-500': 'to-blue-500',
  'to-secondary-600': 'to-cyan-600',
  'to-secondary-700': 'to-cyan-700',
  'to-secondary-800': 'to-cyan-800',
  'to-secondary-900': 'to-cyan-900',
  'to-secondary-50': 'to-cyan-50',
  'to-secondary-100': 'to-cyan-100',
  'to-secondary-200': 'to-cyan-200',
  'to-secondary-300': 'to-cyan-300',
  'to-secondary-400': 'to-cyan-400',
  'to-secondary-500': 'to-cyan-500',
  'to-accent-600': 'to-green-600',
  'to-accent-700': 'to-green-700',
  'to-accent-800': 'to-green-800',
  'to-accent-900': 'to-green-900',
  'to-accent-50': 'to-green-50',
  'to-accent-100': 'to-green-100',
  'to-accent-200': 'to-green-200',
  'to-accent-300': 'to-green-300',
  'to-accent-400': 'to-green-400',
  'to-accent-500': 'to-green-500',
  'to-neutral-50': 'to-gray-50',
  'to-neutral-100': 'to-gray-100',
  'to-neutral-200': 'to-gray-200',
  'to-neutral-300': 'to-gray-300',
  'to-neutral-400': 'to-gray-400',
  'to-neutral-500': 'to-gray-500',
  'to-neutral-600': 'to-gray-600',
  'to-neutral-700': 'to-gray-700',
  'to-neutral-800': 'to-gray-800',
  'to-neutral-900': 'to-gray-900',
  'via-primary-700': 'via-blue-700',
  'via-primary-800': 'via-blue-800',
  'via-primary-900': 'via-blue-900',
  'via-secondary-600': 'via-cyan-600',
  'via-secondary-700': 'via-cyan-700',
  'via-secondary-800': 'via-cyan-800',
  'via-secondary-900': 'via-cyan-900',
  'via-accent-600': 'via-green-600',
  'via-accent-700': 'via-green-700',
  'via-accent-800': 'via-green-800',
  'via-accent-900': 'via-green-900',
  'via-neutral-50': 'via-gray-50',
  'via-neutral-100': 'via-gray-100',
  'via-neutral-200': 'via-gray-200',
  'via-neutral-300': 'via-gray-300',
  'via-neutral-400': 'via-gray-400',
  'via-neutral-500': 'via-gray-500',
  'via-neutral-600': 'via-gray-600',
  'via-neutral-700': 'via-gray-700',
  'via-neutral-800': 'via-gray-800',
  'via-neutral-900': 'via-gray-900'
};

// Função para processar um arquivo
function processFile(filePath) {
  try {
    let content = fs.readFileSync(filePath, 'utf8');
    let modified = false;
    
    // Aplicar todas as substituições
    for (const [oldClass, newClass] of Object.entries(classMappings)) {
      const regex = new RegExp(`\\b${oldClass}\\b`, 'g');
      if (content.includes(oldClass)) {
        content = content.replace(regex, newClass);
        modified = true;
      }
    }
    
    if (modified) {
      fs.writeFileSync(filePath, content, 'utf8');
      console.log(`✅ Processed: ${filePath}`);
    }
  } catch (error) {
    console.error(`❌ Error processing ${filePath}:`, error.message);
  }
}

// Função para processar diretório recursivamente
function processDirectory(dirPath) {
  const items = fs.readdirSync(dirPath);
  
  for (const item of items) {
    const fullPath = path.join(dirPath, item);
    const stat = fs.statSync(fullPath);
    
    if (stat.isDirectory()) {
      processDirectory(fullPath);
    } else if (item.endsWith('.tsx') || item.endsWith('.ts')) {
      processFile(fullPath);
    }
  }
}

// Processar diretório src
console.log('🔧 Fixing CSS classes...');
processDirectory('./src');
console.log('✅ All files processed!');
